# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
- name: resource_group_name
  value: dubradan_monitoring_dev_westeurope_rg 

- name: storage_account_name
  value: dubradantestmonitoring

- name: storage_container_name
  value: tfstate

- name: location
  value: westeurope

trigger:
- main
pool:
  vmImage: ubuntu-latest
steps:
- task: AzureCLI@2
  displayName: "Creating Terraform Azure Backend Resources"
  inputs:
    azureSubscription: 'danieldubravecdevconnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Create resource group
      az group create --name $(RESOURCE_GROUP_NAME) --location "West Europe"
      # Create storage account
      az storage account create --resource-group $(RESOURCE_GROUP_NAME) --name $(STORAGE_ACCOUNT_NAME) --sku Standard_LRS --encryption-services blob
      # Get storage account key
      ACCOUNT_KEY=$(az storage account keys list --resource-group $(RESOURCE_GROUP_NAME) --account-name $(STORAGE_ACCOUNT_NAME) --query [0].value -o tsv)
      # Create blob container
      az storage container create --name $(STORAGE_CONTAINER_NAME) --account-name $(STORAGE_ACCOUNT_NAME) --account-key $ACCOUNT_KEY
      echo "tf_storage_account_name: $(STORAGE_ACCOUNT_NAME)"
      echo "tf_container_name: $(STORAGE_CONTAINER_NAME)"
      echo "access_key: $ACCOUNT_KEY"
      echo "tf_resource_group: $(RESOURCE_GROUP_NAME)"